<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SocialBridge', 'doctrine');

/**
 * BaseSocialBridge
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $email
 * @property enum $status
 * @property string $token
 * @property enum $network
 * @property integer $network_user_id
 * @property sfGuardUser $User
 * 
 * @method integer      getUserId()          Returns the current record's "user_id" value
 * @method string       getEmail()           Returns the current record's "email" value
 * @method enum         getStatus()          Returns the current record's "status" value
 * @method string       getToken()           Returns the current record's "token" value
 * @method enum         getNetwork()         Returns the current record's "network" value
 * @method integer      getNetworkUserId()   Returns the current record's "network_user_id" value
 * @method sfGuardUser  getUser()            Returns the current record's "User" value
 * @method SocialBridge setUserId()          Sets the current record's "user_id" value
 * @method SocialBridge setEmail()           Sets the current record's "email" value
 * @method SocialBridge setStatus()          Sets the current record's "status" value
 * @method SocialBridge setToken()           Sets the current record's "token" value
 * @method SocialBridge setNetwork()         Sets the current record's "network" value
 * @method SocialBridge setNetworkUserId()   Sets the current record's "network_user_id" value
 * @method SocialBridge setUser()            Sets the current record's "User" value
 * 
 * @package    cms
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSocialBridge extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('social_bridge');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('email', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'new',
              1 => 'processing',
              2 => 'closed',
             ),
             'default' => 'new',
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('network', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'facebook',
              1 => 'vkontakte',
              2 => 'mailru',
              3 => 'google',
              4 => 'yandex',
              5 => 'twitter',
             ),
             ));
        $this->hasColumn('network_user_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}